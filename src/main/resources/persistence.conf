akka {
  persistence {
    journal.plugin = "jdbc-journal"
    auto-start-journals = ["jdbc-journal"]

    snapshot-store.plugin = "jdbc-snapshot-store"
    auto-start-snapshot-stores = ["jdbc-snapshot-store"]
  }

  projection {
    jdbc.blocking-jdbc-dispatcher.thread-pool-executor.fixed-pool-size = 32
    jdbc.dialect = postgres-dialect
  }
}

jdbc-connection-settings {
  driver = "org.postgresql.Driver"
  url = "jdbc:postgresql://37.27.243.155:5432/tars"
  user = tars
  password = tars

  connection-pool {
    max-pool-size = 32
    timeout = 500ms
  }
}


akka-persistence-jdbc {
  shared-databases {
    slick {
      profile = "slick.jdbc.PostgresProfile$"
      db {
        connectionPool = "HikariCP"
        host = "localhost"
        url = ${jdbc-connection-settings.url}
        user = ${jdbc-connection-settings.user}
        password = ${jdbc-connection-settings.password}
        driver = ${jdbc-connection-settings.driver}
        hikari {
          maximumPoolSize = 32  # Matches server capacity (2-4 per core)
          minimumIdle = 8
          connectionTimeout = 30000  # 30s
          idleTimeout = 600000  # 10m
          maxLifetime = 1800000  # 30m
        }
      }
    }
  }
}

jdbc-journal {
  use-shared-db = "slick"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "slick"
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  use-shared-db = "slick"
}


scalikejdbc.global {
  loggingSQLErrors = true
  loggingConnections = false
}

akka.db-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 150  # Adjust based on your system capacity
    core-pool-size-factor = 2.0
    core-pool-size-max = 150  # Matches or is lower than HikariCP maximumPoolSize
  }
}